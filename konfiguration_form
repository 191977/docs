# Addon-Konfigurations-Formulare

Möchte man individuelle Einstellungen durch den Nutzer festlegen lassen, benötigt man Formulare zur Pflege der AddOn-Konfiguration. 
Hierzu mussten die Formulare manuell erstellt werden und die Config selbst gespeichert werden. Mit `rex_config_form` hat sich das grundlegend geeändert.
`rex_config_form` erlaubt es Konfigurationen mittels `rex_form` zu erstellen. 

Zuständig ist dafür die auf der `rex_form_base` aufsetzende Class `rex_config_form`.





Beispiel eines Konfigurationsformulars vor REDAXO Version 5.4.0

```php
<?php
$addon = rex_addon::get('beispiel_addon');

$content = '';

if (rex_post('config-submit', 'boolean')) {
    $addon->setConfig(rex_post('config', [
        ['text', 'string'],
        ['farbe', 'string'],
    ]));

    $content .= rex_view::info('Änderung gespeichert');
}

$content .=  '
<div class="rex-form">
    <form action="' . rex_url::currentBackendPage() . '" method="post">
        <fieldset>';

$formElements = [];

$n = [];
$n['label'] = '<label for="rex-out5-border-text">Text</label>';
$n['field'] = '<input class="form-control"  type="text" id="rex-out5-border-text" name="config[text]" value="' . $addon->getConfig('text') . '"/>';
$formElements[] = $n;

$n['label'] = '<label for="rex-out5-border-farbe">Farbe</label>';
$n['field'] = '<input class="form-control" type="text" id="rex-out5-border-farbe" name="config[farbe]" value="' . $addon->getConfig('farbe'). '"/>';
$formElements[] = $n;

$fragment = new rex_fragment();
$fragment->setVar('elements', $formElements, false);
$content .= $fragment->parse('core/form/form.php');

$content .= '
